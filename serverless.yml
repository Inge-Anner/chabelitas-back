service: chabelita-back-api
provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  profile: umg-chabelita
  region: us-east-1
  memorySize: 1024
  timeout: 30
  environment:
    ENV: ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.ENV}
    NODE_ENV: ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.NODE_ENV}
    DB_HOST: ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DB_HOST}
    DB_DATABASE: ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DB_DATABASE}
    DB_USERNAME: ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DB_USERNAME}
    DB_PASSWORD: ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DB_PASSWORD}
  deploymentBucket:
    name: serverless-deployments-bucket
    serverSideEncryption: AES256
functions:
  get-products:
    handler: src/services/products.getProducts
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /product
          method: GET
          cors: true
  get-product-byId:
    handler: src/services/products.getProductById
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /product/{productId}
          method: GET
          cors: true
  insert-product:
    handler: src/services/products.insertProduct
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /product
          method: POST
          cors: true
  update-product:
    handler: src/services/products.updateProduct
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /product/{productId}
          method: PUT
          cors: true
  delete-product:
    handler: src/services/products.deleteProduct
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /product/{productId}
          method: DELETE
          cors: true
  get-order-byId:
    handler: src/services/orders.getOrderById
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /order/{orderId}
          method: GET
          cors: true
  get-order-byDate:
    handler: src/services/orders.getOrderByDate
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /order
          method: GET
          cors: true
  insert-order:
    handler: src/services/orders.insertOrder
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /order
          method: POST
          cors: true
  update-order:
    handler: src/services/orders.updateOrder
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /order/{orderId}
          method: PUT
          cors: true
  delete-order:
    handler: src/services/orders.deleteOrderById
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /order/{orderId}
          method: DELETE
          cors: true
  get-detail-order-byId:
    handler: src/services/detailorders.getDetailsOrderById
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /detailorder/{orderId}
          method: GET
          cors: true
  insert-detail-order:
    handler: src/services/detailorders.insertDetailsOrder
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /detailorder
          method: POST
          cors: true
  update-detail-order:
    handler: src/services/detailorders.updateDetailsOrder
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /detailorder/{orderId}
          method: PUT
          cors: true
  get-users:
    handler: src/services/users.getUser
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /user
          method: GET
          cors: true
  get-user-byId:
    handler: src/services/users.getUserById
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /user/{userId}
          method: GET
          cors: true
  insert-user:
    handler: src/services/users.insertUser
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /user
          method: POST
          cors: true
  update-user:
    handler: src/services/users.updateUser
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /user/{userId}
          method: PUT
          cors: true
  delete-user:
    handler: src/services/users.deleteUser
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /user/{userId}
          method: DELETE
          cors: true
  get-category:
    handler: src/services/category.getCategory
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /category
          method: GET
          cors: true
  get-category-byId:
    handler: src/services/category.getCategoryById
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /category/{categoryId}
          method: GET
          cors: true
  insert-category:
    handler: src/services/category.insertCategory
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /category
          method: POST
          cors: true
  update-category:
    handler: src/services/category.updateCategory
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /category/{categoryId}
          method: PUT
          cors: true
  delete-category:
    handler: src/services/category.deleteCategoryById
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /category/{categoryId}
          method: DELETE
          cors: true
  get-seasons:
    handler: src/services/seasons.getSeason
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /seasons
          method: GET
          cors: true
  get-seasons-byId:
    handler: src/services/seasons.getSeasonById
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /seasons/{seasonId}
          method: GET
          cors: true
  insert-seasons:
    handler: src/services/seasons.insertSeason
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /seasons
          method: POST
          cors: true
  update-seasons:
    handler: src/services/seasons.updateSeason
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /seasons/{seasonId}
          method: PUT
          cors: true
  delete-seasons:
    handler: src/services/seasons.deleteSeasonById
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /seasons/{seasonId}
          method: DELETE
          cors: true
  get-visualizations:
    handler: src/services/visualizations.getVisualization
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /visualizations
          method: GET
          cors: true
  get-visualizations-byId:
    handler: src/services/visualizations.getVisualizationById
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /visualizations/{visualizationId}
          method: GET
          cors: true
  insert-visualizations:
    handler: src/services/visualizations.insertVisualization
    layers:
      - ${file(./config.json):${opt:stage, self:provider.stage, 'dev'}.DEPENDENCIES_LAYER}
    events:
      - http:
          path: /visualizations
          method: POST
          cors: true
package:
  patterns:
    - '!dependencies_layer/**'
plugins:
  - serverless-offline
  - serverless-prune-plugin
  - serverless-deployment-bucket
custom:
  prune:
    automatic: true
    number: 3